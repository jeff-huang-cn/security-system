# 认证授权服务配置
server:
  port: 9000
  servlet:
    context-path: /

spring:
  profiles:
    active: dev
  application:
    name: auth-service

  # 数据库配置 - 使用环境变量
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: ${DB_URL:jdbc:mysql://localhost:3306/admin?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true&createDatabaseIfNotExist=true}
    username: ${DB_USERNAME:root}
    password: ${DB_PASSWORD:123456}
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      initial-size: 5
      min-idle: 5
      max-active: 20
      max-wait: 60000
      time-between-eviction-runs-millis: 60000
      min-evictable-idle-time-millis: 300000
      validation-query: SELECT 1
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false

  # Flyway 数据库迁移配置
  flyway:
    enabled: true
    baseline-on-migrate: true
    locations: classpath:db/migration
    table: flyway_schema_history_service
    out-of-order: true
    validate-on-migrate: false

  # Redis配置
  redis:
    host: ${REDIS_HOST:127.0.0.1}
    port: ${REDIS_PORT:6379}
    #    password: ${REDIS_PASSWORD:}
    database: ${REDIS_DATABASE:0}
    timeout: 5000ms
    lettuce:
      pool:
        max-active: 8
        max-idle: 8
        min-idle: 0
        max-wait: -1ms
    jedis:
      pool:
        max-active: 8
        max-idle: 8
        min-idle: 0
        max-wait: -1ms

# MyBatis-Plus配置
mybatis-plus:
  configuration:
    map-underscore-to-camel-case: true
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  global-config:
    db-config:
      logic-delete-field: deleted
      logic-delete-value: 1
      logic-not-delete-value: 0
  mapper-locations: classpath*:mapper/**/*.xml
  type-aliases-package: com.webapp.security.sso.entity

# OAuth2 授权服务器配置
oauth2:
  server:
    # 授权服务器的基础URL，默认使用localhost
    base-url: ${SERVER_BASE_URL:http://127.0.0.1:9000}
    # JWK Set URI
    jwk-set-uri: ${oauth2.server.base-url}/.well-known/jwks.json
  # 客户端ID配置
  client:
    # API客户端ID
    api-client-id: openapi
    # Web应用客户端ID
    webapp-client-id: webapp-client
  # 前端回调配置
  frontend:
    callback-url: ${FRONTEND_CALLBACK_URL:http://localhost:8081/oauth2/callback}
  # 微信OAuth2配置
  wechat:
    app-id: ${WECHAT_APP_ID:wx985e9aa00f16b0e0}
    app-secret: ${WECHAT_APP_SECRET:0ed86594047220b717cda81a1b355e23}
    redirect-uri: ${WECHAT_REDIRECT_URI:https://885ro126ov70.vicp.fun/oauth2/wechat/callback}
    authorize-url: https://open.weixin.qq.com/connect/qrconnect
    access-token-url: https://api.weixin.qq.com/sns/oauth2/access_token
    user-info-url: https://api.weixin.qq.com/sns/userinfo
    frontend-callback-url: ${oauth2.frontend.callback-url}

  # GitHub OAuth2配置
  github:
    app-id: ${GITHUB_APP_ID:}
    app-secret: ${GITHUB_APP_SECRET:}
    redirect-uri: ${GITHUB_REDIRECT_URI:https://885ro126ov70.vicp.fun/oauth2/github/callback}
    authorize-url: https://github.com/login/oauth/authorize
    token-url: https://github.com/login/oauth/access_token
    user-info-url: https://api.github.com/user
    user-emails-url: https://api.github.com/user/emails
    scope: user:email
    frontend-callback-url: ${oauth2.frontend.callback-url}

  # 支付宝OAuth2配置
  alipay:
    app-id: ${ALIPAY_APP_ID:}
    private-key: ${ALIPAY_PRIVATE_KEY:}
    public-key: ${ALIPAY_PUBLIC_KEY:}
    gateway-url: https://openapi.alipay.com/gateway.do
    redirect-uri: https://885ro126ov70.vicp.fun/oauth2/alipay/callback
    frontend-callback-url: ${oauth2.frontend.callback-url}

# 自定义JWT配置
custom:
  jwt:
    enabled: false # 是否启用自定义JWT功能
    secret: your-secret-key-here-must-be-at-least-256-bits-long-for-security
    expiration: 3600 # 访问令牌过期时间（秒）
    refresh-expiration: 86400 # 刷新令牌过期时间（秒）

# JWT配置（用于微信登录）
jwt:
  secret: ${JWT_SECRET:wechat-oauth2-jwt-secret-key-must-be-at-least-256-bits-long}
  expiration: 86400 # 令牌过期时间（秒）

# 日志配置
logging:
  level:
    com.webapp.security.sso.api: DEBUG
    com.webapp.security.sso.oauth2: DEBUG
    org.springframework.security.oauth2: INFO
